{"version":3,"sources":["webpack:///./src/components/atoms/Input.tsx","webpack:///./src/hooks/useProjects.tsx","webpack:///./src/pages/join-to-project.tsx","webpack:///./src/components/atoms/Label.tsx","webpack:///./src/hooks/useUser.tsx"],"names":["StyledInput","styled","input","theme","inputBackgournd","textPrimary","signup","textSecondary","newProject","css","pinkSecondary","pinkPrimary","useProjects","projects","useSelector","state","setProjects","useDispatch","useEffect","fetchProjects","StyledFormWrapper","main","StyledFormHeadingWrapper","div","StyledContainer","StyledWrapper","section","StyledLogoWrapper","Link","StyledButtonSecondary","greenSecondary","greenPrimary","StyledForm","form","StyledLabelInputWrapper","fieldset","StyledButtonWrapper","StyledButton","button","StyledInfo","p","StyledInfoButton","JoinProject","useState","filteredProject","setFilteredProject","currentUser","useUser","setKey","team","setTeam","setProjectID","to","onSubmit","e","preventDefault","projectKey","key","projectMember","filter","doc","user","uid","setProjectKey","getProjectID","Array","isArray","length","navigate","htmlFor","id","type","onChange","target","value","fetchFactory","name","aria-label","aria-required","autoComplete","StyledLabel","label","fetchUser","setCurrentUser"],"mappings":"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","file":"component---src-pages-join-to-project-tsx-768e9f19e061daff61bd.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst StyledInput = styled.input<{ signup?: boolean; newProject?: boolean; select?: boolean }>`\n  border: none;\n  background-color: ${({ theme }) => theme.inputBackgournd};\n  width: 100%;\n  max-width: 40rem;\n  height: 4rem;\n  border-radius: 8px;\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.textPrimary};\n  font-weight: 500;\n  padding: 0 1.2rem;\n  ::-webkit-file-upload-button {\n    display: none;\n  }\n\n  [type='file'] {\n    cursor: pointer;\n  }\n\n  :focus,\n  :hover {\n    background-color: #fff;\n    box-shadow: ${({ signup }) => (signup ? '#EAFCEE' : '#fff5da')} 0 0 0 4px;\n  }\n  :focus {\n    border: 1px solid ${({ signup }) => (signup ? '#1FC844' : '#F7B801')};\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.textSecondary};\n  }\n\n  @media only screen and (min-width: 1150px) {\n    font-size: 1.4rem;\n    height: 4.2rem;\n  }\n  @media only screen and (min-width: 1200px) {\n    max-width: 50rem;\n  }\n  @media only screen and (min-width: 1400px) {\n    height: 4.6rem;\n  }\n\n  @media only screen and (min-width: 1600px) {\n    height: 4.8rem;\n  }\n\n  ${({ newProject }) =>\n    newProject &&\n    css`\n      :focus,\n      :hover {\n        background-color: #fff;\n        box-shadow: ${({ theme }) => theme.pinkSecondary} 0 0 0 4px;\n      }\n      :focus {\n        border: 1px solid ${({ theme }) => theme.pinkPrimary};\n      }\n    `};\n`;\n\nexport default StyledInput;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchProjects } from '../actions';\n\ninterface Projects {\n  projects: [];\n}\n\nconst useProjects = () => {\n  const projects: any = useSelector<Projects>(state => state.projects);\n  const setProjects = useDispatch();\n\n  useEffect(() => {\n    setProjects(fetchProjects());\n  }, []);\n\n  return projects;\n};\n\nexport default useProjects;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link, navigate } from 'gatsby';\nimport { useSelector, useDispatch, Provider } from 'react-redux';\nimport Layout from '../Layout/Layout';\nimport StyledHeading from '../components/atoms/Heading';\nimport StyledLabel from '../components/atoms/Label';\nimport StyledInput from '../components/atoms/Input';\nimport StyledLogo from '../components/atoms/Logo';\nimport { setProjectKey, fetchFactory, getProjectID } from '../actions/index';\nimport useUser from '../hooks/useUser';\nimport useProjects from '../hooks/useProjects';\nimport useTeam from '../hooks/useTeam';\n\nconst StyledFormWrapper = styled.main`\n  width: 100%;\n  height: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 7rem;\n  margin-bottom: 3rem;\n`;\n\nconst StyledFormHeadingWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    width: auto;\n    min-width: 40rem;\n    justify-content: center;\n    height: 100%;\n    padding-left: 3rem;\n  }\n  @media only screen and (min-width: 1200px) {\n    min-width: 40rem;\n  }\n  @media only screen and (min-width: 1400px) {\n    min-width: 45rem;\n  }\n  @media only screen and (min-width: 1600px) {\n    min-width: 50rem;\n  }\n`;\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 3rem 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  overflow: hidden;\n\n  @media only screen and (min-width: 950px) {\n    padding: 0;\n  }\n`;\n\nconst StyledWrapper = styled.section`\n  width: 100%;\n  max-width: 40rem;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    height: 100%;\n    width: 50%;\n    justify-content: center;\n    padding: 3rem 2rem;\n    max-width: 50%;\n  }\n  @media only screen and (min-width: 1200px) {\n    width: 60%;\n    max-width: 60%;\n  }\n  @media only screen and (min-width: 1600px) {\n    width: 70%;\n    max-width: 70%;\n  }\n`;\n\nconst StyledLogoWrapper = styled(Link)`\n  position: absolute;\n  top: 7%;\n  left: 4%;\n`;\n\nconst StyledButtonSecondary = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 5%;\n  right: 4%;\n  height: 4.3rem;\n  width: 13rem;\n  background-color: ${({ theme }) => theme.greenSecondary};\n  color: ${({ theme }) => theme.greenPrimary};\n  font-size: 1.6rem;\n  font-weight: 700;\n  border-radius: 10px;\n  display: none;\n\n  @media only screen and (min-width: 950px) {\n    display: flex;\n  }\n`;\n\nconst StyledForm = styled.form`\n  margin-top: 5rem;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    justify-content: center;\n  }\n`;\n\nconst StyledLabelInputWrapper = styled.fieldset`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 5rem;\n  border: none;\n\n  @media only screen and (min-width: 950px) {\n    align-items: center;\n  }\n`;\n\nconst StyledButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst StyledButton = styled.button`\n  width: 100%;\n  height: 4rem;\n  font-size: 1.4rem;\n  font-weight: 700;\n  background-color: ${({ theme }) => theme.pinkPrimary};\n  color: #fff;\n  border-radius: 8px;\n  max-width: 40rem;\n  margin-bottom: 2rem;\n\n  :focus {\n    background-color: ${({ theme }) => theme.pinkSecondary};\n    color: ${({ theme }) => theme.pinkPrimary};\n  }\n\n  @media only screen and (min-width: 950px) {\n    width: 35%;\n  }\n  @media only screen and (min-width: 1150px) {\n    font-size: 1.5rem;\n    width: 45%;\n  }\n  @media only screen and (min-width: 1400px) {\n    width: 55%;\n  }\n`;\n\nconst StyledInfo = styled.p`\n  width: 100%;\n  text-align: center;\n  font-size: 1.4rem;\n\n  @media only screen and (min-width: 950px) {\n    display: none;\n  }\n`;\n\nconst StyledInfoButton = styled(Link)`\n  text-decoration: none;\n  position: relative;\n  margin-left: 0.6rem;\n  ::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 50%;\n    background-color: ${({ theme }) => theme.pinkSecondary};\n    z-index: -1;\n    top: 60%;\n    left: 15%;\n  }\n`;\n\nconst JoinProject: React.FC = () => {\n  const [filteredProject, setFilteredProject] = useState<any | null>(null);\n  const currentUser = useUser();\n  const setKey = useDispatch();\n  const projects = useProjects();\n  const team = useSelector(state => state.team);\n  const setTeam = useDispatch();\n  const setProjectID = useDispatch();\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilteredProject(projects.filter((doc: any) => doc.key === e.target.value));\n    setTeam(fetchFactory(projects.filter((doc: any) => doc.key === e.target.value)[0].id, 'FETCH_TEAM', 'team', 'TEAM'));\n  };\n\n  const handleJoin = (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (projects && currentUser && team) {\n      const projectKey = filteredProject[0].key;\n      const projectMember = team.filter(doc => doc.user.uid === currentUser.uid);\n      setKey(setProjectKey(projectKey));\n      setProjectID(getProjectID(projects, projectKey));\n      if (Array.isArray(projectMember) && projectMember.length > 0) {\n        navigate(`project/${projectKey}/team`);\n      } else {\n        navigate(`project/${projectKey}/select-role`);\n      }\n    }\n  };\n\n  return (\n    <Layout>\n      <StyledContainer>\n        <StyledLogoWrapper to=\"/\">\n          <StyledLogo newProject>Projecty</StyledLogo>\n        </StyledLogoWrapper>\n        <StyledWrapper>\n          <StyledFormWrapper>\n            <StyledFormHeadingWrapper>\n              <StyledHeading form>Join to project</StyledHeading>\n              <StyledForm onSubmit={handleJoin}>\n                <StyledLabelInputWrapper>\n                  <StyledLabel htmlFor=\"key\">Key</StyledLabel>\n                  <StyledInput\n                    newProject\n                    id=\"key\"\n                    type=\"text\"\n                    onChange={handleInputChange}\n                    name=\"key\"\n                    aria-label=\"key\"\n                    aria-required=\"true\"\n                    autoComplete=\"new-password\"\n                  />\n                </StyledLabelInputWrapper>\n                <StyledButtonWrapper>\n                  <StyledButton type=\"submit\">Go!</StyledButton>\n                  <StyledInfo>\n                    Want to start project?\n                    <StyledInfoButton to=\"/join-to-project\">Go!</StyledInfoButton>\n                  </StyledInfo>\n                </StyledButtonWrapper>\n              </StyledForm>\n            </StyledFormHeadingWrapper>\n          </StyledFormWrapper>\n        </StyledWrapper>\n        <StyledButtonSecondary to=\"/start-new-project\">start project</StyledButtonSecondary>\n      </StyledContainer>\n    </Layout>\n  );\n};\n\nexport default JoinProject;\n\n// import React from 'react';\n\n// const JoinProject = () => <div>p</div>;\n// export default JoinProject;\n","import styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  font-size: 1.4rem;\n  color: ${({ theme }) => theme.textPrimary};\n  font-weight: 700;\n  margin-bottom: 1rem;\n\n  @media only screen and (min-width: 1150px) {\n    font-size: 1.5rem;\n  }\n`;\n\nexport default StyledLabel;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentUser } from '../actions';\n\ninterface User {\n  currentUser: {\n    uid: string;\n    photoURL: string;\n    email: string;\n    name: string;\n  };\n}\n\nconst useUser = () => {\n  const currentUser: any = useSelector<User>(state => state.currentUser);\n  const fetchUser = useDispatch();\n\n  useEffect(() => {\n    fetchUser(setCurrentUser());\n  }, []);\n  return currentUser;\n};\n\nexport default useUser;\n"],"sourceRoot":""}