{"version":3,"sources":["webpack:///./src/hooks/useUser.tsx","webpack:///./src/pages/start-new-project.tsx"],"names":["useUser","currentUser","useSelector","state","fetchUser","useDispatch","useEffect","setCurrentUser","StyledFormWrapper","styled","main","StyledFormHeadingWrapper","div","StyledContainer","StyledWrapper","section","StyledLogoWrapper","Link","StyledButtonSecondary","theme","yellowSecondary","yellowPrimary","StyledForm","form","StyledLabelInputWrapper","fieldset","StyledButtonWrapper","StyledButton","button","pinkPrimary","pinkSecondary","StyledInfo","p","StyledInfoButton","NewProject","setKey","to","newProject","initialValues","name","key","onSubmit","projectName","projectsRef","firestore","collection","project","user","uid","photoURL","email","add","setProjectKey","navigate","handleCreate","values","handleChange","handleBlur","handleSubmit","htmlFor","id","type","onChange","onBlur","value","aria-label","aria-required","autoComplete"],"mappings":"4FAAA,wCAwBeA,IAXC,WACd,IAAMC,EAAmBC,uBAAkB,SAAAC,GAAK,OAAIA,EAAMF,eACpDG,EAAYC,wBAMlB,OAJAC,qBAAU,WACRF,EAAUG,iBACT,IAEIN,I,0vICLT,IAAMO,EAAoBC,IAAOC,KAAV,KAUjBC,EAA2BF,IAAOG,IAAV,KA0BxBC,EAAkBJ,IAAOG,IAAV,KAefE,EAAgBL,IAAOM,QAAV,KA0BbC,EAAoBP,YAAOQ,IAAPR,CAAH,KAMjBS,EAAwBT,YAAOQ,IAAPR,CAAH,KAUL,qBAAGU,MAAkBC,mBAChC,qBAAGD,MAAkBE,iBAW1BC,EAAab,IAAOc,KAAV,KAaVC,EAA0Bf,IAAOgB,SAAV,KAcvBC,EAAsBjB,IAAOG,IAAV,KAQnBe,EAAelB,IAAOmB,OAAV,KAKI,qBAAGT,MAAkBU,eAOnB,qBAAGV,MAAkBW,iBAChC,qBAAGX,MAAkBU,eAe5BE,EAAatB,IAAOuB,EAAV,KASVC,EAAmBxB,YAAOQ,IAAPR,CAAH,KASE,qBAAGU,MAAkBW,iBAqG9BI,UA5FqB,WAElC,IAAMjC,EAAcD,cACdmC,EAAS9B,wBAuBf,OACE,kBAAC,IAAD,KACE,kBAACQ,EAAD,KACE,kBAACG,EAAD,CAAmBoB,GAAG,KACpB,kBAAC,IAAD,CAAYC,YAAU,GAAtB,aAEF,kBAACvB,EAAD,KACE,kBAACN,EAAD,KACE,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAeY,MAAI,GAAnB,uBACA,kBAAC,IAAD,CAAQe,cAAe,CAAEC,KAAM,GAAIC,IAAK,IAAMC,SAAU,mBA/B/C,SAACC,EAAqBF,GACzC,GAAoB,OAAhBvC,EAAsB,CACxB,IAAM0C,EAAcC,YAAUC,WAAW,YAGnCC,EAAU,CACdJ,cACAF,MACAO,KAAM,CACJC,IANmC/C,EAA/B+C,IAOJC,SAPmChD,EAA1BgD,SAQTC,MARmCjD,EAAhBiD,MASnBX,KATmCtC,EAATsC,OAY9BI,EAAYQ,IAAZ,iBAAqBL,IAEvBX,EAAOiB,YAAcZ,IACrBa,YAAS,WAAWb,EAAZ,gBAa6Ec,CAAnB,EAAGf,KAAH,EAASC,QAC9D,YAAuE,QAApEe,OAAUhB,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,IAAOgB,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACnD,OACE,kBAACpC,EAAD,CAAYmB,SAAUiB,GACpB,kBAAClC,EAAD,KACE,kBAAC,IAAD,CAAamC,QAAQ,QAArB,QACA,kBAAC,IAAD,CACEtB,YAAU,EACVuB,GAAG,OACHC,KAAK,OACLC,SAAUN,EACVO,OAAQN,EACRlB,KAAK,OACLyB,MAAOzB,EACP0B,aAAW,OACXC,gBAAc,OACdC,aAAa,kBAGjB,kBAAC3C,EAAD,KACE,kBAAC,IAAD,CAAamC,QAAQ,OAArB,OACA,kBAAC,IAAD,CACEtB,YAAU,EACVuB,GAAG,MACHC,KAAK,OACLC,SAAUN,EACVO,OAAQN,EACRlB,KAAK,MACLyB,MAAOxB,EACPyB,aAAW,MACXC,gBAAc,OACdC,aAAa,kBAGjB,kBAACzC,EAAD,KACE,kBAACC,EAAD,CAAckC,KAAK,UAAnB,UACA,kBAAC9B,EAAD,6BAEE,kBAACE,EAAD,CAAkBG,GAAG,oBAArB,iBAUlB,kBAAClB,EAAD,CAAuB2C,KAAK,SAASzB,GAAG,oBAAxC","file":"component---src-pages-start-new-project-tsx-8bb82272553a6e8e71d7.js","sourcesContent":["import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentUser } from '../actions';\n\ninterface User {\n  currentUser: {\n    uid: string;\n    photoURL: string;\n    email: string;\n    name: string;\n  };\n}\n\nconst useUser = () => {\n  const currentUser: any = useSelector<User>(state => state.currentUser);\n  const fetchUser = useDispatch();\n\n  useEffect(() => {\n    fetchUser(setCurrentUser());\n  }, []);\n\n  return currentUser;\n};\n\nexport default useUser;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { RouteComponentProps } from '@reach/router';\nimport { Link, navigate } from 'gatsby';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { firestore } from '../firebase/index';\nimport Layout from '../Layout/Layout';\nimport StyledHeading from '../components/atoms/Heading';\nimport StyledLabel from '../components/atoms/Label';\nimport StyledInput from '../components/atoms/Input';\nimport StyledLogo from '../components/atoms/Logo';\n// import usePageWidth from '../hooks/usePageWidth';\nimport { setProjectKey } from '../actions/index';\nimport useUser from '../hooks/useUser';\n\nconst StyledFormWrapper = styled.main`\n  width: 100%;\n  height: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 7rem;\n  margin-bottom: 3rem;\n`;\n\nconst StyledFormHeadingWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    width: auto;\n    min-width: 40rem;\n    justify-content: center;\n    height: 100%;\n    padding-left: 3rem;\n  }\n  @media only screen and (min-width: 1200px) {\n    min-width: 40rem;\n  }\n  @media only screen and (min-width: 1400px) {\n    min-width: 45rem;\n  }\n  @media only screen and (min-width: 1600px) {\n    min-width: 50rem;\n  }\n`;\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 3rem 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  overflow: hidden;\n\n  @media only screen and (min-width: 950px) {\n    padding: 0;\n  }\n`;\n\nconst StyledWrapper = styled.section`\n  width: 100%;\n  max-width: 40rem;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    height: 100%;\n    width: 50%;\n    justify-content: center;\n    padding: 3rem 2rem;\n    max-width: 50%;\n  }\n  @media only screen and (min-width: 1200px) {\n    width: 60%;\n    max-width: 60%;\n  }\n  @media only screen and (min-width: 1600px) {\n    width: 70%;\n    max-width: 70%;\n  }\n`;\n\nconst StyledLogoWrapper = styled(Link)`\n  position: absolute;\n  top: 7%;\n  left: 4%;\n`;\n\nconst StyledButtonSecondary = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 5%;\n  right: 4%;\n  height: 4.3rem;\n  width: 13rem;\n  background-color: ${({ theme }) => theme.yellowSecondary};\n  color: ${({ theme }) => theme.yellowPrimary};\n  font-size: 1.6rem;\n  font-weight: 700;\n  border-radius: 10px;\n  display: none;\n\n  @media only screen and (min-width: 950px) {\n    display: flex;\n  }\n`;\n\nconst StyledForm = styled.form`\n  margin-top: 5rem;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    justify-content: center;\n  }\n`;\n\nconst StyledLabelInputWrapper = styled.fieldset`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 5rem;\n  border: none;\n\n  @media only screen and (min-width: 950px) {\n    align-items: center;\n  }\n`;\n\nconst StyledButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst StyledButton = styled.button`\n  width: 100%;\n  height: 4rem;\n  font-size: 1.4rem;\n  font-weight: 700;\n  background-color: ${({ theme }) => theme.pinkPrimary};\n  color: #fff;\n  border-radius: 8px;\n  max-width: 40rem;\n  margin-bottom: 2rem;\n\n  :focus {\n    background-color: ${({ theme }) => theme.pinkSecondary};\n    color: ${({ theme }) => theme.pinkPrimary};\n  }\n\n  @media only screen and (min-width: 950px) {\n    width: 35%;\n  }\n  @media only screen and (min-width: 1150px) {\n    font-size: 1.5rem;\n    width: 45%;\n  }\n  @media only screen and (min-width: 1400px) {\n    width: 55%;\n  }\n`;\n\nconst StyledInfo = styled.p`\n  width: 100%;\n  text-align: center;\n  font-size: 1.4rem;\n  @media only screen and (min-width: 950px) {\n    display: none;\n  }\n`;\n\nconst StyledInfoButton = styled(Link)`\n  text-decoration: none;\n  position: relative;\n  margin-left: 0.6rem;\n  ::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 50%;\n    background-color: ${({ theme }) => theme.pinkSecondary};\n    z-index: -1;\n    top: 60%;\n    left: 15%;\n  }\n`;\n\ntype Props = RouteComponentProps;\n\nconst NewProject: React.FC<Props> = () => {\n  // const pageWidth = usePageWidth();\n  const currentUser = useUser();\n  const setKey = useDispatch();\n\n  const handleCreate = (projectName: string, key: string) => {\n    if (currentUser !== null) {\n      const projectsRef = firestore.collection('projects');\n      const { uid, photoURL, email, name } = currentUser;\n\n      const project = {\n        projectName,\n        key,\n        user: {\n          uid,\n          photoURL,\n          email,\n          name,\n        },\n      };\n      projectsRef.add({ ...project });\n    }\n    setKey(setProjectKey(key));\n    navigate(`project/${key}/select-role`);\n  };\n\n  return (\n    <Layout>\n      <StyledContainer>\n        <StyledLogoWrapper to=\"/\">\n          <StyledLogo newProject>Projecty</StyledLogo>\n        </StyledLogoWrapper>\n        <StyledWrapper>\n          <StyledFormWrapper>\n            <StyledFormHeadingWrapper>\n              <StyledHeading form>Start a new project</StyledHeading>\n              <Formik initialValues={{ name: '', key: '' }} onSubmit={({ name, key }) => handleCreate(name, key)}>\n                {({ values: { name, key }, handleChange, handleBlur, handleSubmit }) => {\n                  return (\n                    <StyledForm onSubmit={handleSubmit}>\n                      <StyledLabelInputWrapper>\n                        <StyledLabel htmlFor=\"name\">Name</StyledLabel>\n                        <StyledInput\n                          newProject\n                          id=\"name\"\n                          type=\"text\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          name=\"name\"\n                          value={name}\n                          aria-label=\"name\"\n                          aria-required=\"true\"\n                          autoComplete=\"new-password\"\n                        />\n                      </StyledLabelInputWrapper>\n                      <StyledLabelInputWrapper>\n                        <StyledLabel htmlFor=\"key\">Key</StyledLabel>\n                        <StyledInput\n                          newProject\n                          id=\"key\"\n                          type=\"text\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          name=\"key\"\n                          value={key}\n                          aria-label=\"key\"\n                          aria-required=\"true\"\n                          autoComplete=\"new-password\"\n                        />\n                      </StyledLabelInputWrapper>\n                      <StyledButtonWrapper>\n                        <StyledButton type=\"submit\">Create</StyledButton>\n                        <StyledInfo>\n                          Already have project?\n                          <StyledInfoButton to=\"/join-to-project\">Join</StyledInfoButton>\n                        </StyledInfo>\n                      </StyledButtonWrapper>\n                    </StyledForm>\n                  );\n                }}\n              </Formik>\n            </StyledFormHeadingWrapper>\n          </StyledFormWrapper>\n        </StyledWrapper>\n        <StyledButtonSecondary type=\"yellow\" to=\"/join-to-project\">\n          join to project\n        </StyledButtonSecondary>\n      </StyledContainer>\n    </Layout>\n  );\n};\n\nexport default NewProject;\n\n// import React from 'react';\n\n// const NewProject = () => <div>sss</div>;\n// export default NewProject;\n"],"sourceRoot":""}