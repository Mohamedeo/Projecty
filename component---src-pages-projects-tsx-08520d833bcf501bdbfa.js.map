{"version":3,"sources":["webpack:///./src/components/atoms/Card.tsx","webpack:///./src/hooks/useProjects.tsx","webpack:///./src/components/molecules/FoundersProjectsList.tsx","webpack:///./src/pages/projects.tsx"],"names":["StyledCard","styled","div","type","theme","cardShadow","StyledImageWrapper","figure","StyledTexWrapper","article","StyledCardHeading","h3","StyledText","p","textSecondary","Card","heading","content","photoURL","src","alt","length","trimString","useProjects","projects","useSelector","state","setProjects","useDispatch","useEffect","fetchProjects","StyledCardWrapper","FoundersProjectsList","handlePick","filter","doc","auth","currentUser","user","uid","map","projectName","key","onClick","StyledFormWrapper","main","StyledFormHeadingWrapper","StyledContainer","StyledWrapper","section","StyledLogoWrapper","Link","StyledButtonsWrapper","StyledButtonSecondary","Projects","setId","Layout","to","newProject","form","projectKey","getProjectID","navigate"],"mappings":"23CAIA,IAAMA,EAAaC,IAAOC,IAAV,KAEJ,kBAAwB,YAAxB,EAAGC,KAAiC,QAAU,WAQ7B,qBAAGC,MAAkBC,cAS5CC,EAAqBL,IAAOM,OAAV,KAclBC,EAAmBP,IAAOQ,QAAV,KAWhBC,EAAoBT,IAAOU,GAAV,KAOjBC,EAAaX,IAAOY,EAAV,KAEL,qBAAGT,MAAkBU,iBA2BjBC,IAhBe,SAAC,GAAyC,IAAvCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,QAASd,EAAqB,EAArBA,KAAMe,EAAe,EAAfA,SACvD,OACE,kBAAClB,EAAD,CAAYG,KAAMA,GACfe,GACC,kBAACZ,EAAD,KACE,yBAAKa,IAAKD,EAAUE,IAAKJ,KAG7B,kBAACR,EAAD,KACE,kBAACE,EAAD,KAAoBM,GACnBC,GAAWA,EAAQI,QAAU,GAAK,kBAACT,EAAD,KAAaU,YAAWL,GAAxB,OAAoD,kBAACL,EAAD,KAAaK,O,kCC9E5G,wCAmBeM,IAXK,WAClB,IAAMC,EAAgBC,uBAAsB,SAAAC,GAAK,OAAIA,EAAMF,YACrDG,EAAcC,wBAMpB,OAJAC,qBAAU,WACRF,EAAYG,iBACX,IAEIN,I,4VCXT,IAAMO,EAAoB9B,IAAOC,IAAV,KAkCR8B,EAlB+B,SAAC,GAA6B,IAA3BR,EAA2B,EAA3BA,SAAUS,EAAiB,EAAjBA,WAGzD,OACE,oCACGT,EACC,oCACGA,EAASU,QANK,SAACC,GAAD,OAAeC,IAAKC,YAAcF,EAAIG,KAAKC,MAAQH,IAAKC,YAAYE,IAAM,QAMxDC,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,IAAhB,OACnC,kBAACX,EAAD,CAAmBY,QAAS,kBAAMV,EAAWS,KAC3C,kBAAC3B,EAAA,EAAD,CAAMC,QAASyB,EAAatC,KAAK,iBAIrC,O,g4ECvBV,IAAMyC,EAAoB3C,IAAO4C,KAAV,KASjBC,EAA2B7C,IAAOC,IAAV,KA0BxB6C,EAAkB9C,IAAOC,IAAV,KAef8C,EAAgB/C,IAAOgD,QAAV,KA0BbC,EAAoBjD,YAAOkD,IAAPlD,CAAH,KAMjBmD,EAAuBnD,IAAOC,IAAV,KAcpBmD,EAAwBpD,YAAOkD,IAAPlD,CAAH,KAQL,YAClB,OADgC,EAAXE,MAEnB,IAAK,SACH,MAAO,UACT,IAAK,QACH,MAAO,UACT,QACE,MAAO,cAGJ,YACP,OADqB,EAAXA,MAER,IAAK,SACH,MAAO,UACT,IAAK,QACH,MAAO,UACT,QACE,MAAO,cA6CAmD,UArCY,WACzB,IAAM9B,EAAWD,cACXgC,EAAQ3B,wBAOd,OACE,kBAAC4B,EAAA,EAAD,KACE,kBAACT,EAAD,KACE,kBAACG,EAAD,CAAmBO,GAAG,KACpB,kBAAC,IAAD,CAAYC,YAAU,GAAtB,aAEF,kBAACV,EAAD,KACE,kBAACJ,EAAD,KACE,kBAACE,EAAD,KACE,kBAAC,IAAD,CAAea,MAAI,GAAnB,uBACA,kBAAC,EAAD,CAAsBnC,SAAUA,EAAUS,WAfnC,SAAC2B,GAClBL,EAAMM,YAAarC,EAAUoC,IAC7BE,YAAS,WAAWF,EAAZ,eAkBJ,kBAACR,EAAD,KACE,kBAACC,EAAD,CAAuBlD,KAAK,SAASsD,GAAG,oBAAxC,mBAGA,kBAACJ,EAAD,CAAuBlD,KAAK,QAAQsD,GAAG,sBAAvC","file":"component---src-pages-projects-tsx-08520d833bcf501bdbfa.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { trimString } from '../../utils/utils';\n\nconst StyledCard = styled.div<{ type?: string }>`\n  width: 24rem;\n  height: ${({ type }) => (type === 'project' ? '10rem' : '20rem')};\n  padding: 2rem 2.2rem;\n  display: flex;\n  align-items: flex-start;\n  justify-items: flex-start;\n  font-size: 2rem;\n  font-weight: 400;\n  border-radius: 7px;\n  box-shadow: 3px 6px 10px ${({ theme }) => theme.cardShadow};\n  margin-bottom: 6rem;\n\n  @media only screen and (min-width: 950px) {\n    width: 30rem;\n    padding: 2.4rem 2.6rem 2.4rem 1rem;\n  }\n`;\n\nconst StyledImageWrapper = styled.figure`\n  width: 6rem;\n  height: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n\n  img {\n    width: 5rem;\n    height: 5rem;\n    border-radius: 50%;\n  }\n`;\n\nconst StyledTexWrapper = styled.article`\n  width: calc(100% - 7rem);\n  display: flex;\n  align-items: flex-start;\n  justify-items: center;\n  flex-direction: column;\n  font-size: 2rem;\n  padding: 1rem;\n  word-break: break-word;\n`;\n\nconst StyledCardHeading = styled.h3`\n  font-size: 1.8rem;\n  font-weight: 400;\n  margin: 0rem 0 0.5rem 0;\n  text-transform: capitalize;\n`;\n\nconst StyledText = styled.p`\n  font-size: 1.8rem;\n  color: ${({ theme }) => theme.textSecondary};\n  font-weight: 400;\n`;\n\ninterface Props {\n  heading: string;\n  content?: string;\n  type?: string;\n  photoURL?: string;\n}\n\nconst Card: React.FC<Props> = ({ heading, content, type, photoURL }) => {\n  return (\n    <StyledCard type={type}>\n      {photoURL && (\n        <StyledImageWrapper>\n          <img src={photoURL} alt={heading} />\n        </StyledImageWrapper>\n      )}\n      <StyledTexWrapper>\n        <StyledCardHeading>{heading}</StyledCardHeading>\n        {content && content.length >= 65 ? <StyledText>{trimString(content)}...</StyledText> : <StyledText>{content}</StyledText>}\n      </StyledTexWrapper>\n    </StyledCard>\n  );\n};\n\nexport default Card;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchProjects } from '../actions';\n\ninterface Projects {\n  projects: [];\n}\n\nconst useProjects = () => {\n  const projects: any = useSelector<Projects>(state => state.projects);\n  const setProjects = useDispatch();\n\n  useEffect(() => {\n    setProjects(fetchProjects());\n  }, []);\n\n  return projects;\n};\n\nexport default useProjects;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Card from '../atoms/Card';\nimport { auth } from '../../firebase';\n\nconst StyledCardWrapper = styled.div`\n  text-decoration: none;\n  color: inherit;\n  cursor: pointer;\n`;\n\ninterface Project {\n  projectName: string;\n  key: string;\n}\n\ninterface Props {\n  projects: Project[];\n  handlePick: (key: string) => void;\n}\n\nconst FoundersProjectsList: React.FC<Props> = ({ projects, handlePick }) => {\n  const filterDocument = (doc: any) => (auth.currentUser ? doc.user.uid === auth.currentUser.uid : null);\n\n  return (\n    <>\n      {projects ? (\n        <>\n          {projects.filter(filterDocument).map(({ projectName, key }: Project) => (\n            <StyledCardWrapper onClick={() => handlePick(key)}>\n              <Card heading={projectName} type=\"project\" />\n            </StyledCardWrapper>\n          ))}\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default FoundersProjectsList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, navigate } from 'gatsby';\nimport { useDispatch } from 'react-redux';\nimport Layout from '../Layout/Layout';\nimport StyledHeading from '../components/atoms/Heading';\nimport StyledLogo from '../components/atoms/Logo';\nimport { getProjectID } from '../actions';\nimport FoundersProjectsList from '../components/molecules/FoundersProjectsList';\nimport useProjects from '../hooks/useProjects';\n\nconst StyledFormWrapper = styled.main`\n  width: 100%;\n  height: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 3rem;\n`;\n\nconst StyledFormHeadingWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 8rem;\n\n  @media only screen and (min-width: 950px) {\n    width: auto;\n    min-width: 40rem;\n    height: 100%;\n    padding-left: 3rem;\n  }\n  @media only screen and (min-width: 1200px) {\n    min-width: 40rem;\n  }\n  @media only screen and (min-width: 1400px) {\n    min-width: 45rem;\n  }\n  @media only screen and (min-width: 1600px) {\n    min-width: 50rem;\n  }\n`;\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 3rem 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  position: relative;\n  overflow: hidden;\n\n  @media only screen and (min-width: 950px) {\n    padding: 0;\n  }\n`;\n\nconst StyledWrapper = styled.section`\n  width: 100%;\n  max-width: 40rem;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    height: 100%;\n    width: 50%;\n    justify-content: center;\n    padding: 3rem 2rem;\n    max-width: 50%;\n  }\n  @media only screen and (min-width: 1200px) {\n    width: 60%;\n    max-width: 60%;\n  }\n  @media only screen and (min-width: 1600px) {\n    width: 70%;\n    max-width: 70%;\n  }\n`;\n\nconst StyledLogoWrapper = styled(Link)`\n  position: absolute;\n  top: 7%;\n  left: 4%;\n`;\n\nconst StyledButtonsWrapper = styled.div`\n  position: absolute;\n  top: 5%;\n  right: 4%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n\n  @media only screen and (min-width: 500px) {\n    flex-direction: row;\n  }\n`;\n\nconst StyledButtonSecondary = styled(Link)<{ type: string }>`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 4.3rem;\n  width: 13rem;\n  margin: 1rem;\n  background-color: ${({ type }) => {\n    switch (type) {\n      case 'yellow':\n        return '#fff5da';\n      case 'green':\n        return '#eafcee';\n      default:\n        return '#fff5da';\n    }\n  }};\n  color: ${({ type }) => {\n    switch (type) {\n      case 'yellow':\n        return '#f7b801';\n      case 'green':\n        return '#1fc844';\n      default:\n        return '#f7b801';\n    }\n  }};\n  font-size: 1.6rem;\n  font-weight: 700;\n  border-radius: 10px;\n`;\n\nconst Projects: React.FC = () => {\n  const projects = useProjects();\n  const setId = useDispatch();\n\n  const handlePick = (projectKey: string) => {\n    setId(getProjectID(projects, projectKey));\n    navigate(`project/${projectKey}/team`);\n  };\n\n  return (\n    <Layout>\n      <StyledContainer>\n        <StyledLogoWrapper to=\"/\">\n          <StyledLogo newProject>Projecty</StyledLogo>\n        </StyledLogoWrapper>\n        <StyledWrapper>\n          <StyledFormWrapper>\n            <StyledFormHeadingWrapper>\n              <StyledHeading form>Choose your project</StyledHeading>\n              <FoundersProjectsList projects={projects} handlePick={handlePick} />\n            </StyledFormHeadingWrapper>\n          </StyledFormWrapper>\n        </StyledWrapper>\n\n        <StyledButtonsWrapper>\n          <StyledButtonSecondary type=\"yellow\" to=\"/join-to-project\">\n            join to project\n          </StyledButtonSecondary>\n          <StyledButtonSecondary type=\"green\" to=\"/start-new-project\">\n            start project\n          </StyledButtonSecondary>\n        </StyledButtonsWrapper>\n      </StyledContainer>\n    </Layout>\n  );\n};\n\nexport default Projects;\n\n// import React from 'react';\n\n// const Projects = () => <div>sss</div>;\n// export default Projects;\n"],"sourceRoot":""}