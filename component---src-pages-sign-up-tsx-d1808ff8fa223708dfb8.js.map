{"version":3,"sources":["webpack:///./src/pages/sign-up.tsx"],"names":["StyledFormWrapper","styled","main","StyledFormHeadingWrapper","div","StyledForm","form","StyledButtonWrapper","StyledInfo","p","StyledInfoButton","Link","theme","greenSecondary","SignUp","handleSignUp","email","password","name","a","auth","createUserWithEmailAndPassword","then","user","currentUser","createUserDoc","navigate","initialValues","onSubmit","values","handleChange","handleBlur","handleSubmit","signUp","htmlFor","signup","id","type","onChange","onBlur","value","aria-label","aria-required","autoComplete","placeholder","color","to"],"mappings":"srEAcA,IAAMA,EAAoBC,IAAOC,KAAV,KAQjBC,EAA2BF,IAAOG,IAAV,KA0BxBC,EAAaJ,IAAOK,KAAV,KAaVC,EAAsBN,IAAOG,IAAV,KAQnBI,EAAaP,IAAOQ,EAAV,KASVC,EAAmBT,YAAOU,IAAPV,CAAH,KASE,qBAAGW,MAAkBC,kBAgG9BC,UAzFU,WAGvB,IAAMC,EAAY,e,EAAA,G,EAAA,UAAG,WAAOC,EAAeC,EAAkBC,GAAxC,SAAAC,EAAA,sEACbC,OAAKC,+BAA+BL,EAAOC,GAAUK,MAAK,WAC9D,IAAMC,EAAOH,OAAKI,YAClBC,YAAcF,EAAML,GACpBQ,YAAS,yBAJQ,0C,+KAAH,0DAQlB,OACE,kBAAC,IAAD,CACEC,cAAe,CAAEX,MAAO,GAAIC,SAAU,GAAIC,KAAM,IAChDU,SAAU,gBAAGZ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,KAApB,OAA+BH,EAAaC,EAAOC,EAAUC,MAEtE,YAAmF,QAAhFW,OAAUb,EAAsE,EAAtEA,MAAOC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,KAAQY,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC/D,OACE,kBAAC,IAAD,CAAcC,QAAM,GAClB,kBAACjC,EAAD,KACE,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAeG,MAAI,GAAnB,uBACA,kBAACD,EAAD,CAAYuB,SAAUI,GACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaE,QAAQ,QAArB,aACA,kBAAC,IAAD,CACEC,QAAM,EACNC,GAAG,OACHC,KAAK,OACLC,SAAUR,EACVS,OAAQR,EACRb,KAAK,OACLsB,MAAOtB,EACPuB,aAAW,OACXC,gBAAc,OACdC,aAAa,kBAIjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaT,QAAQ,SAArB,gBACA,kBAAC,IAAD,CACEC,QAAM,EACNC,GAAG,QACHC,KAAK,QACLC,SAAUR,EACVS,OAAQR,EACRb,KAAK,QACLsB,MAAOxB,EACPyB,aAAW,QACXC,gBAAc,OACdC,aAAa,kBAGjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaT,QAAQ,YAArB,YACA,kBAAC,IAAD,CACEG,KAAK,WACLO,YAAY,gBACZT,QAAM,EACNC,GAAG,WACHE,SAAUR,EACVS,OAAQR,EACRb,KAAK,WACLsB,MAAOvB,EACPwB,aAAW,WACXC,gBAAc,OACdC,aAAa,kBAIjB,kBAACpC,EAAD,KACE,kBAAC,IAAD,CAAcsC,MAAM,QAAQR,KAAK,UAAjC,WAGA,kBAAC7B,EAAD,4BAEE,kBAACE,EAAD,CAAkBoC,GAAG,YAArB","file":"component---src-pages-sign-up-tsx-d1808ff8fa223708dfb8.js","sourcesContent":["import React from 'react';\nimport { Link, navigate } from 'gatsby';\nimport { Formik } from 'formik';\nimport styled from 'styled-components';\nimport { auth } from '../firebase/index';\nimport FormTemplate from '../templates/FormTemplate';\nimport StyledHeading from '../components/atoms/Heading';\nimport StyledLabel from '../components/atoms/Label';\nimport StyledInput from '../components/atoms/Input';\nimport { createUserDoc } from '../firebase/utils';\n// import usePageWidth from '../hooks/usePageWidth';\nimport StyledButton from '../components/atoms/Button';\nimport StyledLabelInputWrapper from '../components/atoms/LabelInputWrapper';\n\nconst StyledFormWrapper = styled.main`\n  width: 100%;\n  height: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledFormHeadingWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    width: auto;\n    min-width: 40rem;\n    justify-content: center;\n    height: 100%;\n    padding-left: 3rem;\n  }\n  @media only screen and (min-width: 1200px) {\n    min-width: 40rem;\n  }\n  @media only screen and (min-width: 1400px) {\n    min-width: 45rem;\n  }\n  @media only screen and (min-width: 1600px) {\n    min-width: 50rem;\n  }\n`;\n\nconst StyledForm = styled.form`\n  margin-top: 5rem;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n\n  @media only screen and (min-width: 950px) {\n    justify-content: center;\n  }\n`;\n\nconst StyledButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst StyledInfo = styled.p`\n  width: 100%;\n  text-align: center;\n  font-size: 1.4rem;\n  @media only screen and (min-width: 950px) {\n    display: none;\n  }\n`;\n\nconst StyledInfoButton = styled(Link)`\n  text-decoration: none;\n  position: relative;\n  margin-left: 0.6rem;\n  ::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 50%;\n    background-color: ${({ theme }) => theme.greenSecondary};\n    z-index: -1;\n    top: 60%;\n    left: 15%;\n  }\n`;\n\nconst SignUp: React.FC = () => {\n  // const pageWidth = usePageWidth();\n\n  const handleSignUp = async (email: string, password: string, name: string) => {\n    await auth.createUserWithEmailAndPassword(email, password).then(() => {\n      const user = auth.currentUser;\n      createUserDoc(user, name);\n      navigate('/start-new-project');\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '', name: '' }}\n      onSubmit={({ email, password, name }) => handleSignUp(email, password, name)}\n    >\n      {({ values: { email, password, name }, handleChange, handleBlur, handleSubmit }) => {\n        return (\n          <FormTemplate signUp>\n            <StyledFormWrapper>\n              <StyledFormHeadingWrapper>\n                <StyledHeading form>Sign up to Projecty</StyledHeading>\n                <StyledForm onSubmit={handleSubmit}>\n                  <StyledLabelInputWrapper>\n                    <StyledLabel htmlFor=\"name\">Full Name</StyledLabel>\n                    <StyledInput\n                      signup\n                      id=\"name\"\n                      type=\"text\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"name\"\n                      value={name}\n                      aria-label=\"name\"\n                      aria-required=\"true\"\n                      autoComplete=\"new-password\"\n                    />\n                  </StyledLabelInputWrapper>\n\n                  <StyledLabelInputWrapper>\n                    <StyledLabel htmlFor=\"email\">Email Adress</StyledLabel>\n                    <StyledInput\n                      signup\n                      id=\"email\"\n                      type=\"email\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"email\"\n                      value={email}\n                      aria-label=\"email\"\n                      aria-required=\"true\"\n                      autoComplete=\"new-password\"\n                    />\n                  </StyledLabelInputWrapper>\n                  <StyledLabelInputWrapper>\n                    <StyledLabel htmlFor=\"password\">Password</StyledLabel>\n                    <StyledInput\n                      type=\"password\"\n                      placeholder=\"6+ characters\"\n                      signup\n                      id=\"password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"password\"\n                      value={password}\n                      aria-label=\"password\"\n                      aria-required=\"true\"\n                      autoComplete=\"new-password\"\n                    />\n                  </StyledLabelInputWrapper>\n\n                  <StyledButtonWrapper>\n                    <StyledButton color=\"green\" type=\"submit\">\n                      Sign up\n                    </StyledButton>\n                    <StyledInfo>\n                      Haven't got account?\n                      <StyledInfoButton to=\"/sign-in\">Sign in</StyledInfoButton>\n                    </StyledInfo>\n                  </StyledButtonWrapper>\n                </StyledForm>\n              </StyledFormHeadingWrapper>\n            </StyledFormWrapper>\n          </FormTemplate>\n        );\n      }}\n    </Formik>\n  );\n};\nexport default SignUp;\n"],"sourceRoot":""}